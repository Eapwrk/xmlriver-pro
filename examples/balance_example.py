"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ get_balance() –∏ get_cost()

–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è:
- get_balance() - –µ–¥–∏–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –≤—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ XMLRiver
- get_cost() - —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–∏—Å—Ç–µ–º—ã (Google/Yandex/Wordstat)
"""

import asyncio
import os
from dotenv import load_dotenv

from xmlriver_pro import AsyncGoogleClient, AsyncYandexClient
from xmlriver_pro.wordstat import AsyncWordstatClient


async def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    user_id = int(os.getenv("XMLRIVER_USER_ID", "0"))
    api_key = os.getenv("XMLRIVER_API_KEY", "")

    if not user_id or not api_key:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ XMLRIVER_USER_ID –∏ XMLRIVER_API_KEY –≤ .env —Ñ–∞–π–ª–µ")
        return

    print("=" * 60)
    print("üí∞ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê –ò –°–¢–û–ò–ú–û–°–¢–ò XMLRiver API")
    print("=" * 60)

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ Google –∫–ª–∏–µ–Ω—Ç
    async with AsyncGoogleClient(user_id=user_id, api_key=api_key) as google:
        balance = await google.get_balance()
        google_cost = await google.get_cost()
        
        print(f"\nüìä Google Search:")
        print(f"   –ë–∞–ª–∞–Ω—Å: {balance:.2f} —Ä—É–±. (–µ–¥–∏–Ω—ã–π –¥–ª—è –≤—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞)")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {google_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ Yandex –∫–ª–∏–µ–Ω—Ç (–±–∞–ª–∞–Ω—Å —Ç–æ—Ç –∂–µ)
    async with AsyncYandexClient(user_id=user_id, api_key=api_key) as yandex:
        balance = await yandex.get_balance()
        yandex_cost = await yandex.get_cost()
        
        print(f"\nüìä Yandex Search:")
        print(f"   –ë–∞–ª–∞–Ω—Å: {balance:.2f} —Ä—É–±. (—Ç–æ—Ç –∂–µ —Å–∞–º—ã–π)")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {yandex_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ Wordstat –∫–ª–∏–µ–Ω—Ç
    async with AsyncWordstatClient(user_id=user_id, api_key=api_key) as wordstat:
        balance = await wordstat.get_balance()
        wordstat_cost = await wordstat.get_cost()
        
        print(f"\nüìä Yandex Wordstat:")
        print(f"   –ë–∞–ª–∞–Ω—Å: {balance:.2f} —Ä—É–±. (—Ç–æ—Ç –∂–µ —Å–∞–º—ã–π)")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {wordstat_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")

    # 4. –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    print("\n" + "=" * 60)
    print("üìã –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê")
    print("=" * 60)
    print(f"–ï–¥–∏–Ω—ã–π –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {balance:.2f} —Ä—É–±.")
    print(f"\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤:")
    print(f"  - Google:   {google_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")
    print(f"  - Yandex:   {yandex_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")
    print(f"  - Wordstat: {wordstat_cost:.2f} —Ä—É–±/1000 –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    # 5. –†–∞—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    if google_cost > 0:
        google_requests = int((balance / google_cost) * 1000)
        print(f"\nüí° –ü—Ä–∏ —Ç–µ–∫—É—â–µ–º –±–∞–ª–∞–Ω—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ:")
        print(f"  - Google:   ~{google_requests:,} –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    if yandex_cost > 0:
        yandex_requests = int((balance / yandex_cost) * 1000)
        print(f"  - Yandex:   ~{yandex_requests:,} –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    if wordstat_cost > 0:
        wordstat_requests = int((balance / wordstat_cost) * 1000)
        print(f"  - Wordstat: ~{wordstat_requests:,} –∑–∞–ø—Ä–æ—Å–æ–≤")

    print("\n" + "=" * 60)


if __name__ == "__main__":
    asyncio.run(main())

